#include <bits/stdc++.h>
using namespace std;

using ll = long long;

int n; // üîß Thi·∫øu bi·∫øn n√†y trong ƒëo·∫°n g·ªëc
int c[105][105], X[100]; // Ma tr·∫≠n chi ph√≠ v√† m·∫£ng l∆∞u h√†nh tr√¨nh
int visited[105]; // ƒê√°nh d·∫•u th√†nh ph·ªë ƒë√£ ƒëi qua
int d = 0; // T·ªïng chi ph√≠ hi·ªán t·∫°i
int ans = INT_MAX; // K·∫øt qu·∫£ t·ªët nh·∫•t t√¨m ƒë∆∞·ª£c
int dem = 0; // ƒê·∫øm s·ªë l·∫ßn g·ªçi Try
int cmin = INT_MAX; // Chi ph√≠ nh·ªè nh·∫•t gi·ªØa 2 th√†nh ph·ªë b·∫•t k·ª≥

// Nh·∫≠p d·ªØ li·ªáu ƒë·∫ßu v√†o v√† t√¨m cmin
void nhap() {
    cin >> n;
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= n; j++) {
            cin >> c[i][j];
            if (c[i][j] != 0) {
                cmin = min(cmin, c[i][j]);
            }
        }
    }
    memset(visited, 0, sizeof(visited));
}

// H√†m quay lui t√¨m h√†nh tr√¨nh t·ªëi ∆∞u
void Try(int i) {
    ++dem;
    for (int j = 2; j <= n; j++) { // B·ªè j=1 v√¨ X[1]=1 c·ªë ƒë·ªãnh
        if (!visited[j]) {
            visited[j] = 1;
            X[i] = j;
            d += c[X[i - 1]][X[i]];

            if (i == n) {
                // Ho√†n th√†nh 1 h√†nh tr√¨nh, c·ªông th√™m chi ph√≠ v·ªÅ l·∫°i ƒëi·ªÉm xu·∫•t ph√°t
                ans = min(ans, d + c[X[n]][X[1]]);
            } else if (d + (n - i + 1) * cmin < ans) {
                // C·∫Øt nh√°nh n·∫øu kh√¥ng th·ªÉ c√≥ l·ªùi gi·∫£i t·ªët h∆°n
                Try(i + 1);
            }

            // Quay lui
            visited[j] = 0;
            d -= c[X[i - 1]][X[i]];
        }
    }
}

int main() {
    nhap();
    X[1] = 1; // Xu·∫•t ph√°t t·ª´ th√†nh ph·ªë 1
    visited[1] = 1;
    Try(2);
    cout << "Chi phi nho nhat: " << ans << "\n";
    cout << "So lan goi ham Try: " << dem << "\n";
    return 0;
}
